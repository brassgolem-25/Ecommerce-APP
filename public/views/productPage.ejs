<%- include('header'); -%>
<div class="position-absolute show-notification">
    <div class="toast hide" id="toast-notification" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="1000">
        <div class="d-flex">
            <div class="toast-body" id="toast-message">
               No changes in the cart.
            </div>
            <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
</div>
    <div class="product-container">
        <div class="product-smallImg-container">
            <img class="product-sm-img" src="<%=product.imageUrl%>" onmouseover="showThisImage(this)">
            <img class="product-sm-img" src="<%=product.imageUrl%>" onmouseover="showThisImage(this)">
            <img class="product-sm-img" src="<%=product.imageUrl%>" onmouseover="showThisImage(this)">
            <img class="product-sm-img" src="<%=product.imageUrl%>" onmouseover="showThisImage(this)">

        </div>
        <div class="main-Img">
            <img class="product-img" id="main-Img" src="<%=product.imageUrl%>">
        </div>
        <div class="product-details">
            <p class="product-loc"><a href="/" class="removeHyperLink">Home</a> / <a
                    href="/category/<%=product.category %>" class="removeHyperLink">
                    <%=product.category%>
                </a> / <%=product.name%>
            </p>
            <h5>
                <%=product.name%>
            </h5>
            <p class="product-review"> (<%=product.rating.count%> Reviews) |<a style="color: green;"> In Stock</a></p>
            <h6 id="product-price">$ <%=product.price%></h6>
            <%const desc=product.description%>
                <p>
                    <%=desc%>
                </p>
                <div class="product-color">
                    <h6>Colors: <i class="fa-solid fa-circle color-icon active-icon" style="color: #74C0FC;"
                            onclick="renderColor(this)"></i> <i class="fa-solid fa-circle color-icon "
                            style="color: #B197FC;" onclick="renderColor(this)"></i></h6>
                </div>
                <div id="size-div" class="product-size">
                    <h6 class="size-cls">Size: </h6>
                    <div class="cust-btn-p">
                        <button class="size-button" data-product-size="XS"onClick="sizeChosen(this)">XS</button>
                        <button class="size-button" data-product-size="S" onClick="sizeChosen(this)">S</button>
                        <button class="size-button active-size" data-product-size="M" onClick="sizeChosen(this)">M</button>
                        <button class="size-button" data-product-size="L" onClick="sizeChosen(this)">L</button>
                        <button class="size-button" data-product-size="XL" onClick="sizeChosen(this)">XL</button>
                    </div>
                </div>
                <div>
                    <button type="button" id="cart" class="btn-style cart-btn" data-product_id="<%=product._id%>">Add to cart</button>

                    <button id="rzp-button1" class="btn-style">Buy Now</button>
                            <!-- below button function is in footer -->
                    <button class="wishList-Button wishList-btn"data-product_id="<%=product._id%>">
                        <%if(isWishlisted){ %>
                            <i class="fa-solid fa-heart fa-lg" style="color:#ec4109"></i></button>
                          <%}else {%>
                            <i class="fa-regular fa-heart fa-lg"></i></button>
                          <%}%>
                </div>
                <div class="delivery-comp">
                    <p style="margin-top: 10px;"><i class="fa-solid fa-truck-fast fa-xl"></i>Free Delivery</p>
                    <a>Enter your postal code for Delivery Availability</a>
                    <br>
                    <br>
                    <p><i class="fa-solid fa-arrows-rotate fa-xl"></i> Return Delivery </p>
                    <a>Free 30 Days Delivery Returns. Details</a>
                </div>
        </div>
    </div>
    <!-- <div class="related-item-container">
        <h6>Related Item</h6>
        <div class="related-item">
            <div class="img-container">
                <img class="related-item-img" src="<%=product.imageUrl%>">
                <i class="fa-regular fa-heart"></i>

            </div>

        </div>
    </div> -->
    <script>let productRating = `<%=product.rating.rate%>`; let productReview = `<%=product.rating.count%>`;
        const productName = `<%=product.name%>`; const productCategory = `<%=product.category%>`;  const userLoggedIn = `<%= isUserLoggedIn %>`
    </script>
    <script src="../script/displayToast.js"></script>
    <script src="../script/renderReviewIcon.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
        //disable but now and add to cart if user is not logged in
        function makeButtonDisabled(element){
                element.disabled = true;
                element.style.backgroundColor = 'grey';
                element.style.cursor = 'not-allowed';
        }
        console.log(typeof(userLoggedIn))
        if(userLoggedIn==="false"){
            const cartBtn = document.getElementById('cart');
            const buyNowBtn = document.getElementById('rzp-button1');
            console.log(cartBtn)
            makeButtonDisabled(cartBtn);
            makeButtonDisabled(buyNowBtn);
        }

        //increase/decrease price depening upon size
        let subTotal=parseInt(`<%=product.price%>`);
        
        const productsArrId = [`<%=product._id%>`];
        let orderGenerated;
        async function fetchCheckoutData() {
            const response = await fetch('/cart/checkout', {
                method: 'POST',
                body: JSON.stringify({ subTotal,fromCart:false }),
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            orderGenerated = await response.json();
            console.log(JSON.stringify(orderGenerated));
            var options = {
                "key": orderGenerated.key, // Enter the Key ID generated from the Dashboard
                "amount": orderGenerated.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
                "currency": "USD",
                "name": "Exclusive",
                "description": "Test Transaction",
                "image": "https://example.com/your_logo",
                "order_id": orderGenerated.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
                "handler": function (data) {
                    data.isCart = orderGenerated.isCart;
                    // send data for checking if the payment was done
                    fetch('/cart/order', {
                        method: "POST",
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            data: data,
                            productsArrId: productsArrId
                        })
                    }).then(response => response.JSON()).then(alert(data.razorpay_payment_id))
                },
                "prefill": {
                    "name": "Gaurav Kumar",
                    "email": "gaurav.kumar@example.com",
                    "contact": "9000090000"
                },
                "notes": {
                    "address": "Razorpay Corporate Office"
                },
                "theme": {
                    "color": "#3399cc"
                }
            };
            var rzp1 = new Razorpay(options);
            document.getElementById('rzp-button1').onclick = function (e) {
                rzp1.open();
                e.preventDefault();
            }
        }
        if(userLoggedIn){
        fetchCheckoutData();
        }

        function sizeChosen(element) {
            // console.log(element);
            const colorIcon = document.querySelectorAll(".size-button")
            colorIcon.forEach(icon => {
                if (icon !== element) {
                    icon.classList.remove('active-size');
                }
            });
            element.classList.add('active-size');
            const priceElement = document.getElementById('product-price');

            // Get the current price value
            const currentPrice = parseFloat(`<%=product.price%>`);

            const sizeSelected = element.textContent;
            const priceMap = {
                        'XS': currentPrice-2,
                        'S': currentPrice-1,
                        'M': currentPrice,
                        'L': (currentPrice + 1).toFixed(2),
                        'XL': (currentPrice+2).toFixed(2)
                };
            const pSize = element.textContent;
            // Update the price element with the new price
            subTotal = parseInt(priceMap[pSize]);
            console.log(subTotal)
            priceElement.textContent = `$ ${priceMap[pSize]}`;
            //calling fucntion for getting updated price
            if(userLoggedIn){
            fetchCheckoutData();
            }
        }
        //razorpay end


        function showThisImage(e) {
            const smallImageSrc = e.src;
            const mainContainerImage = document.getElementById("main-Img");
            mainContainerImage.src = smallImageSrc;
        }

        function renderColor(element) {
            const colorIcon = document.querySelectorAll(".color-icon")
            colorIcon.forEach(icon => {
                if (icon !== element) {
                    icon.classList.remove('active-icon');
                }
            });
            element.classList.toggle('active-icon');
        }
    </script>
    <script src="../script/addToCart.js"></script>
    <script src="../script/whisListScript.js"></script>
    <%- include('footer'); -%>